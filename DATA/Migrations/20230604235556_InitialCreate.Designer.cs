// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(PhotographerContext))]
    [Migration("20230604235556_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.EntityPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("entityPhoto", "dbo");
                });

            modelBuilder.Entity("Data.Models.EntitySector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdType");

                    b.ToTable("entitySector", "dbo");
                });

            modelBuilder.Entity("Data.Models.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("entityType", "dbo");
                });

            modelBuilder.Entity("Data.Models.EntityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("entityUser", "dbo");
                });

            modelBuilder.Entity("Data.Models.PhotoSector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEntityPhoto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEntitySector")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdEntityPhoto")
                        .IsUnique();

                    b.HasIndex("IdEntitySector")
                        .IsUnique();

                    b.ToTable("photoSector", "dbo");
                });

            modelBuilder.Entity("Data.Models.EntitySector", b =>
                {
                    b.HasOne("Data.Models.EntityType", "Type")
                        .WithMany("Sector")
                        .HasForeignKey("IdType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Data.Models.PhotoSector", b =>
                {
                    b.HasOne("Data.Models.EntityPhoto", "EntityPhoto")
                        .WithOne("PhotoSector")
                        .HasForeignKey("Data.Models.PhotoSector", "IdEntityPhoto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.EntitySector", "EntitySector")
                        .WithOne("PhotoSector")
                        .HasForeignKey("Data.Models.PhotoSector", "IdEntitySector")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityPhoto");

                    b.Navigation("EntitySector");
                });

            modelBuilder.Entity("Data.Models.EntityPhoto", b =>
                {
                    b.Navigation("PhotoSector")
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.EntitySector", b =>
                {
                    b.Navigation("PhotoSector")
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.EntityType", b =>
                {
                    b.Navigation("Sector");
                });
#pragma warning restore 612, 618
        }
    }
}
